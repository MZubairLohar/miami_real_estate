{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { contractAddress, abi } from '../utils/contractDetails'; // returns ethers.providers.Web3Provider\n\nexport const getLibrary = provider => {\n  const library = new ethers.providers.Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n};","map":{"version":3,"sources":["/Users/zubair/Documents/office/Dapps/miami_real_estate/src/utils/web3Library.js"],"names":["ethers","contractAddress","abi","getLibrary","provider","library","providers","Web3Provider","pollingInterval"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAAQC,eAAR,EAAwBC,GAAxB,QAAkC,0BAAlC,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc;AACpC,QAAMC,OAAO,GAAG,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCH,QAAlC,CAAhB;AACAC,EAAAA,OAAO,CAACG,eAAR,GAA0B,KAA1B;AACA,SAAOH,OAAP;AACH,CAJM","sourcesContent":["import { ethers } from \"ethers\";\nimport {contractAddress,abi} from '../utils/contractDetails';\n\n// returns ethers.providers.Web3Provider\nexport const getLibrary = (provider) => {\n    const library = new ethers.providers.Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n}\n"]},"metadata":{},"sourceType":"module"}