{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n\nconst initContract = createAsyncThunk(\"initContract\", async () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  console.log(provider); // const contractInstance = await ethers.getContractAt();\n});\nconst contractSlice = createSlice({\n  name: \"contract\",\n  initialState: {\n    contract: null\n  },\n  reducers: {\n    [initContract.fulfilled]: (state, action) => {\n      state.contract = action.payload;\n    }\n  }\n});\nexport const contractReducer = contractSlice.reducer;\nexport const {\n  setContract\n} = contractSlice.actions;","map":{"version":3,"sources":["/Users/zubair/Documents/office/Dapps/miami_real_estate/src/store/Slice.js"],"names":["createAsyncThunk","createSlice","useWeb3React","ethers","require","initContract","provider","providers","Web3Provider","window","ethereum","console","log","contractSlice","name","initialState","contract","reducers","fulfilled","state","action","payload","contractReducer","reducer","setContract","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,YAAY,GAAGL,gBAAgB,CACjC,cADiC,EAEjC,YAAY;AACR,QAAMM,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAFQ,CAGR;AACH,CANgC,CAArC;AASA,MAAMO,aAAa,GAAGZ,WAAW,CAAC;AAC9Ba,EAAAA,IAAI,EAAG,UADuB;AAE9BC,EAAAA,YAAY,EAAG;AACXC,IAAAA,QAAQ,EAAG;AADA,GAFe;AAK9BC,EAAAA,QAAQ,EAAG;AACP,KAACZ,YAAY,CAACa,SAAd,GAA2B,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACzCD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACH;AAHM;AALmB,CAAD,CAAjC;AAaA,OAAO,MAAMC,eAAe,GAAIT,aAAa,CAACU,OAAvC;AACP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAkBX,aAAa,CAACY,OAAtC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { useWeb3React } from \"@web3-react/core\";\nconst { ethers } = require(\"ethers\");\nconst initContract = createAsyncThunk(\n    \"initContract\",\n    async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        console.log(provider);\n        // const contractInstance = await ethers.getContractAt();\n    }\n)\n\nconst contractSlice = createSlice({\n    name : \"contract\",\n    initialState : {\n        contract : null,\n    },\n    reducers : {\n        [initContract.fulfilled] : (state,action) => {\n            state.contract = action.payload;\n        }\n\n    }\n});\n\nexport const contractReducer =  contractSlice.reducer;\nexport const { setContract } = contractSlice.actions;"]},"metadata":{},"sourceType":"module"}